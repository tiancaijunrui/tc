/*
 * This file is generated by jOOQ.
*/
package com.kotlin.zcj.tc.data.tables;


import com.kotlin.zcj.tc.data.Keys;
import com.kotlin.zcj.tc.data.Public;
import com.kotlin.zcj.tc.data.tables.records.TTcUserRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TTcUser extends TableImpl<TTcUserRecord> {

    private static final long serialVersionUID = -1394678663;

    /**
     * The reference instance of <code>public.t_tc_user</code>
     */
    public static final TTcUser T_TC_USER = new TTcUser();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TTcUserRecord> getRecordType() {
        return TTcUserRecord.class;
    }

    /**
     * The column <code>public.t_tc_user.user_id</code>.
     */
    public final TableField<TTcUserRecord, String> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this, "");

    /**
     * The column <code>public.t_tc_user.login_name</code>.
     */
    public final TableField<TTcUserRecord, String> LOGIN_NAME = createField("login_name", org.jooq.impl.SQLDataType.VARCHAR.length(30).nullable(false), this, "");

    /**
     * The column <code>public.t_tc_user.password</code>.
     */
    public final TableField<TTcUserRecord, String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

    /**
     * The column <code>public.t_tc_user.email</code>.
     */
    public final TableField<TTcUserRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>public.t_tc_user.phone</code>.
     */
    public final TableField<TTcUserRecord, String> PHONE = createField("phone", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "");

    /**
     * The column <code>public.t_tc_user.age</code>.
     */
    public final TableField<TTcUserRecord, Integer> AGE = createField("age", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.t_tc_user.birthday</code>.
     */
    public final TableField<TTcUserRecord, Timestamp> BIRTHDAY = createField("birthday", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>public.t_tc_user.create_by</code>.
     */
    public final TableField<TTcUserRecord, String> CREATE_BY = createField("create_by", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this, "");

    /**
     * The column <code>public.t_tc_user.create_time</code>.
     */
    public final TableField<TTcUserRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>public.t_tc_user.update_by</code>.
     */
    public final TableField<TTcUserRecord, String> UPDATE_BY = createField("update_by", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this, "");

    /**
     * The column <code>public.t_tc_user.update_time</code>.
     */
    public final TableField<TTcUserRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>public.t_tc_user</code> table reference
     */
    public TTcUser() {
        this("t_tc_user", null);
    }

    /**
     * Create an aliased <code>public.t_tc_user</code> table reference
     */
    public TTcUser(String alias) {
        this(alias, T_TC_USER);
    }

    private TTcUser(String alias, Table<TTcUserRecord> aliased) {
        this(alias, aliased, null);
    }

    private TTcUser(String alias, Table<TTcUserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TTcUserRecord> getPrimaryKey() {
        return Keys.T_TC_USER_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TTcUserRecord>> getKeys() {
        return Arrays.<UniqueKey<TTcUserRecord>>asList(Keys.T_TC_USER_PKEY, Keys.T_TC_USER_LOGIN_NAME_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TTcUser as(String alias) {
        return new TTcUser(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TTcUser rename(String name) {
        return new TTcUser(name, null);
    }
}
